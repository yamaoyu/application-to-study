# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application test

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Cache Docker
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-buildx-
        
    - name: Start Docker
      run: |
        docker compose up -d --build
        docker compose exec -T backend bash -c "timeout 60 bash -c 'until curl -s http://localhost:8000/health; do echo waiting...; sleep 2; done'"
    
    - name: Create results directory
      run: mkdir -p results
    
    - name: Test with pytest
      run: |
        docker compose exec -T backend python -m pytest -vv --junitxml=results/test-results.xml
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: results/test-results.xml
        
    - name: Docker logs
      if: ${{ failure() }}
      run: docker compose logs

