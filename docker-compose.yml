version: '3.8'

services:
  web:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      DB_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TEST_MYSQL_DATABASE: ${TEST_MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      APP_ADMIN_USER: ${APP_ADMIN_USER}
      APP_ADMIN_PASSWORD: ${APP_ADMIN_PASSWORD}
      ENV: ${ENV}
      LOGFILE_PATH: ${LOGFILE_PATH}
      DEV_LOGFILE_PATH: ${DEV_LOGFILE_PATH}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/frontend
    depends_on:
      - web

  db:
    image: mysql:8.0
    platform: linux/arm64
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      TIMEZONE: ${TIMEZONE}
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/db/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 3
    
volumes:
  db_data:
    
