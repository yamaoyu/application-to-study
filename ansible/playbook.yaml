- name: Study App
  hosts: webservers
  tasks:
  - name: hwclockのインストール
    become: true
    ansible.builtin.apt:
      name:
        - util-linux-extra

  - name: NTPとシステムクロックの同期
    become: true
    command: timedatectl set-ntp true

  - name: NTPサーバー再起動
    become: true
    command:  systemctl restart systemd-timesyncd

  - name: ハードウェアクロックとシステムクロックの同期
    become: true
    command: hwclock --systohc

  - name: タイムゾーンをAsia/Tokyoに設定
    become: true
    community.general.timezone:
      name: Asia/Tokyo

  - name: docker起動用のディレクトリを作成
    file:
      path: "{{ app_root_dir }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0755'
    become: true

  - name: gitリポジトリ作成
    ansible.builtin.git:
      repo: "{{ repo_url }}"
      dest: "{{ app_root_dir }}"
      version: "{{ branch }}"
    become_flags: '-E'

  - name: .envの設定
    ansible.builtin.copy:
      dest: "{{ env_vars_dest }}"
      src: "{{ env_vars_src }}"

  - name: dockerインストールに必要なパッケージをインストール
    become: true
    ansible.builtin.apt:
      name:
        - apt-transport-https 
        - ca-certificates
        - curl
        - gnupg
        - software-properties-common
      state: present
      update_cache: true

  - name: dockerのGPGキーを追加
    become: true
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: ubuntu向けのdockerリポジトリを追加
    become: true
    ansible.builtin.apt_repository:
      repo: "deb {{ architecture }} https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present

  - name: dockerインストール
    become: true
    ansible.builtin.apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose-plugin
      state: present
      update_cache: true

  - name: dockerグループにユーザーを追加
    become: true
    ansible.builtin.user:
      name: "{{ ansible_user }}"
      append: true
      groups: docker

  - name: vueで使用する画像をコピー
    ansible.builtin.copy:
      dest: "{{ img_dest }}"
      src: "{{ img_src }}"

  - name: 既存のdocker削除
    community.docker.docker_compose_v2:
      project_src: "{{ app_root_dir }}"
      state: absent

  - name: docker起動
    community.docker.docker_compose_v2:
      project_src: "{{ app_root_dir }}"
      state: present
      build: always
      env_files: .env
      files: docker-compose.yml
